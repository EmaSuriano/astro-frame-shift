---
// src/pages/image/[id].astro
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const collection = await getCollection('gallery');
  const images = collection.map((a) => a.data);

  return images.map((image) => {
    const related = images.filter(
      (img) => img.id !== image.id && img.category === image.category,
    );
    return {
      params: { id: image.id.toString() },
      props: { image, related },
    };
  });
}

const { image, related } = Astro.props;
const { BASE_URL } = import.meta.env;
---

<Layout title={`${image.title} | Image Gallery`}>
  <main class="container mx-auto px-6 py-16">
    <a
      href={BASE_URL}
      class="inline-flex items-center mb-12 text-stone-600 dark:text-slate-400 hover:text-stone-900 dark:hover:text-stone-200 transition-colors duration-300 font-light"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5 mr-1"
        viewBox="0 0 20 20"
        fill="currentColor"
      >
        <path
          fill-rule="evenodd"
          d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
          clip-rule="evenodd"></path>
      </svg>
      Back to Gallery
    </a>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 items-start">
      <!-- Large Image taking 2/3 of the space -->
      <div
        class="lg:col-span-2 overflow-hidden rounded-lg max-h-[85vh] flex items-center justify-center bg-transparent"
        transition:name={`image-${image.id}`}
      >
        <Image
          src={image.src}
          alt={image.alt}
          width="800"
          height="800"
          class="w-auto h-auto object-contain max-h-[85vh] max-w-full"
          loading="eager"
        />
      </div>

      <!-- Image information taking 1/3 of the space -->
      <div class="lg:col-span-1 py-4 lg:sticky lg:top-8">
        <h1
          class="text-3xl font-light tracking-wide mb-2 text-stone-900 dark:text-stone-100"
        >
          {image.title}
        </h1>

        <h2
          class="text-lg font-light mb-8 text-stone-600 dark:text-slate-300 tracking-wide"
        >
          {image.category}
        </h2>

        <div class="mb-8">
          <p
            class="text-stone-700 dark:text-gray-200 leading-relaxed font-light"
          >
            {image.description}
          </p>
        </div>

        <div class="space-y-4 text-sm">
          <div class="flex">
            <span class="font-medium w-28 text-stone-600 dark:text-slate-400"
              >Category:</span
            >
            <span class="text-stone-700 dark:text-slate-300 font-light"
              >{image.category}</span
            >
          </div>

          <div class="flex">
            <span class="font-medium w-28 text-stone-600 dark:text-slate-400"
              >Date:</span
            >
            <span class="text-stone-700 dark:text-slate-300 font-light"
              >{
                new Date(image.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })
              }</span
            >
          </div>

          <div class="flex">
            <span class="font-medium w-28 text-stone-600 dark:text-slate-400"
              >Photo by:</span
            >
            {
              image.photographerLink ? (
                <a
                  href={image.photographerLink}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="text-stone-700 dark:text-slate-300 hover:text-stone-900 dark:hover:text-stone-100 transition-colors duration-300 font-light"
                >
                  {image.photographer}
                </a>
              ) : (
                <span class="text-stone-700 dark:text-slate-300 font-light">
                  {image.photographer}
                </span>
              )
            }
          </div>
        </div>
      </div>
    </div>

    {
      related.length > 0 && (
        <div class="mt-16">
          <h2 class="text-2xl font-light tracking-wide mb-8 text-stone-900 dark:text-stone-100">
            Related Images
          </h2>
          <div class="masonry-container columns-1 sm:columns-2 md:columns-3 lg:columns-4 gap-6 space-y-6">
            {related.map((image, i) => (
              <div class="masonry-item break-inside-avoid mb-6">
                <a
                  href={`${BASE_URL}image/${image.id}`}
                  class="group block overflow-hidden rounded-sm transition-all duration-300 relative"
                  transition:name={`image-${image.id}`}
                >
                  <div class="overflow-hidden relative">
                    <Image
                      src={image.src}
                      alt={image.alt}
                      loading={i < 5 ? 'eager' : 'lazy'}
                      width="400"
                      height="400"
                      class="w-full h-auto object-cover transition-transform duration-500 group-hover:scale-102"
                    />
                    <div class="absolute inset-0 bg-black opacity-0 group-hover:opacity-40 transition-opacity duration-300 flex items-center justify-center pointer-events-none">
                      <div class="text-white text-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 p-4">
                        <h3 class="text-lg font-medium mb-1">{image.title}</h3>
                        <p class="text-sm font-light tracking-wide opacity-90">
                          {image.category}
                        </p>
                      </div>
                    </div>
                  </div>
                </a>
              </div>
            ))}
          </div>
        </div>
      )
    }
  </main>
</Layout>
